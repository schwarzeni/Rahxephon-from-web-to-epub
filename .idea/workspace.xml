<?xml version="1.0" encoding="UTF-8"?>
<project version="4">
  <component name="ChangeListManager">
    <list default="true" id="4c04aa3f-7b43-43f2-bc83-868a3493510e" name="Default Changelist" comment="" />
    <option name="EXCLUDED_CONVERTED_TO_IGNORED" value="true" />
    <option name="SHOW_DIALOG" value="false" />
    <option name="HIGHLIGHT_CONFLICTS" value="true" />
    <option name="HIGHLIGHT_NON_ACTIVE_CHANGELIST" value="false" />
    <option name="LAST_RESOLUTION" value="IGNORE" />
  </component>
  <component name="FileColors">
    <fileColor scope="Non-Project Files (Material Default)" color="2E3C43" />
    <fileColor scope="Non-Project Files (Material Darker)" color="323232" />
    <fileColor scope="Non-Project Files (Material Lighter)" color="eae8e8" />
    <fileColor scope="Non-Project Files (Material Palenight)" color="2f2e43" />
  </component>
  <component name="FileTemplateManagerImpl">
    <option name="RECENT_TEMPLATES">
      <list>
        <option value="Go Application" />
        <option value="Go File" />
      </list>
    </option>
  </component>
  <component name="GOROOT" path="/usr/local/Cellar/go/1.12.7/libexec" />
  <component name="Git.Settings">
    <option name="RECENT_GIT_ROOT_PATH" value="$PROJECT_DIR$" />
  </component>
  <component name="GoLibraries">
    <option name="indexEntireGoPath" value="false" />
  </component>
  <component name="JsBowerSettings">
    <exe-path />
    <config-path />
  </component>
  <component name="JsFlowSettings">
    <service-enabled>false</service-enabled>
    <exe-path />
    <annotation-enable>false</annotation-enable>
    <other-services-enabled>false</other-services-enabled>
  </component>
  <component name="ProjectId" id="1P8JWosXnCutuGiiEebRiE4CZBt" />
  <component name="PropertiesComponent">
    <property name="DefaultGoTemplateProperty" value="Go File" />
    <property name="HbShouldOpenHtmlAsHb" value="" />
    <property name="JavaScriptWeakerCompletionTypeGuess" value="true" />
    <property name="SHARE_PROJECT_CONFIGURATION_FILES" value="true" />
    <property name="WebServerToolWindowFactoryState" value="false" />
    <property name="aspect.path.notification.shown" value="true" />
    <property name="go.import.settings.migrated" value="true" />
    <property name="last_opened_file_path" value="$PROJECT_DIR$/doc" />
    <property name="nodejs_interpreter_path.stuck_in_default_project" value="/usr/local/bin/node" />
    <property name="nodejs_npm_path_reset_for_default_project" value="true" />
    <property name="settings.editor.selected.configurable" value="preferences.keymap" />
  </component>
  <component name="RecentsManager">
    <key name="CopyFile.RECENT_KEYS">
      <recent name="$PROJECT_DIR$/doc" />
    </key>
    <key name="MoveFile.RECENT_KEYS">
      <recent name="$PROJECT_DIR$/model" />
      <recent name="$PROJECT_DIR$/core" />
    </key>
  </component>
  <component name="RunDashboard">
    <option name="ruleStates">
      <list>
        <RuleState>
          <option name="name" value="ConfigurationTypeDashboardGroupingRule" />
        </RuleState>
        <RuleState>
          <option name="name" value="StatusDashboardGroupingRule" />
        </RuleState>
      </list>
    </option>
  </component>
  <component name="RunManager" selected="Go Build.go build get-data-from-web-make-ebook">
    <configuration name="go build get-data-from-web-make-ebook" type="GoApplicationRunConfiguration" factoryName="Go Application" temporary="true" nameIsGenerated="true">
      <module name="get-data-from-web-make-ebook" />
      <working_directory value="$PROJECT_DIR$" />
      <kind value="PACKAGE" />
      <filePath value="$PROJECT_DIR$/main.go" />
      <package value="get-data-from-web-make-ebook" />
      <directory value="$PROJECT_DIR$" />
      <method v="2" />
    </configuration>
    <configuration name="TestFetchAndSaveImage in get-data-from-web-make-ebook" type="GoTestRunConfiguration" factoryName="Go Test" temporary="true" nameIsGenerated="true">
      <module name="get-data-from-web-make-ebook" />
      <working_directory value="$PROJECT_DIR$" />
      <framework value="gotest" />
      <kind value="PACKAGE" />
      <package value="get-data-from-web-make-ebook" />
      <directory value="$PROJECT_DIR$" />
      <filePath value="$PROJECT_DIR$" />
      <pattern value="^TestFetchAndSaveImage$" />
      <method v="2" />
    </configuration>
    <configuration name="TestFetchContent in get-data-from-web-make-ebook" type="GoTestRunConfiguration" factoryName="Go Test" temporary="true" nameIsGenerated="true">
      <module name="get-data-from-web-make-ebook" />
      <working_directory value="$PROJECT_DIR$" />
      <framework value="gotest" />
      <kind value="PACKAGE" />
      <package value="get-data-from-web-make-ebook" />
      <directory value="$PROJECT_DIR$" />
      <filePath value="$PROJECT_DIR$" />
      <pattern value="^TestFetchContent$" />
      <method v="2" />
    </configuration>
    <configuration name="TestParseContent in get-data-from-web-make-ebook" type="GoTestRunConfiguration" factoryName="Go Test" temporary="true" nameIsGenerated="true">
      <module name="get-data-from-web-make-ebook" />
      <working_directory value="$PROJECT_DIR$" />
      <framework value="gotest" />
      <kind value="PACKAGE" />
      <package value="get-data-from-web-make-ebook" />
      <directory value="$PROJECT_DIR$" />
      <filePath value="$PROJECT_DIR$" />
      <pattern value="^TestParseContent$" />
      <method v="2" />
    </configuration>
    <configuration name="TestTitleParser in get-data-from-web-make-ebook" type="GoTestRunConfiguration" factoryName="Go Test" temporary="true" nameIsGenerated="true">
      <module name="get-data-from-web-make-ebook" />
      <working_directory value="$PROJECT_DIR$" />
      <framework value="gotest" />
      <kind value="PACKAGE" />
      <package value="get-data-from-web-make-ebook" />
      <directory value="$PROJECT_DIR$" />
      <filePath value="$PROJECT_DIR$" />
      <pattern value="^TestTitleParser$" />
      <method v="2" />
    </configuration>
    <recent_temporary>
      <list>
        <item itemvalue="Go Build.go build get-data-from-web-make-ebook" />
        <item itemvalue="Go Test.TestFetchAndSaveImage in get-data-from-web-make-ebook" />
        <item itemvalue="Go Test.TestParseContent in get-data-from-web-make-ebook" />
        <item itemvalue="Go Test.TestFetchContent in get-data-from-web-make-ebook" />
        <item itemvalue="Go Test.TestTitleParser in get-data-from-web-make-ebook" />
      </list>
    </recent_temporary>
  </component>
  <component name="SvnConfiguration">
    <configuration />
  </component>
  <component name="TaskManager">
    <task active="true" id="Default" summary="Default task">
      <changelist id="4c04aa3f-7b43-43f2-bc83-868a3493510e" name="Default Changelist" comment="" />
      <created>1565249824497</created>
      <option name="number" value="Default" />
      <option name="presentableId" value="Default" />
      <updated>1565249824497</updated>
      <workItem from="1565249827048" duration="6261000" />
      <workItem from="1565257111113" duration="5856000" />
    </task>
    <servers />
  </component>
  <component name="TypeScriptGeneratedFilesManager">
    <option name="version" value="1" />
  </component>
  <component name="VgoProject">
    <integration-enabled>true</integration-enabled>
    <proxy>https://goproxy.io</proxy>
  </component>
</project>